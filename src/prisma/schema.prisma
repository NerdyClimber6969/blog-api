// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  username String @unique
  firstName String
  lastName String
  role Role @default(user)
  hash String
  posts Post[]
  comments Comment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  user
  admin
}

model Post {
  id String @id @default(uuid())
  title String
  content String?
  summary String? @db.VarChar(500) 
  status Status @default(drafted)
  authorId String
  author User @relation(fields: [authorId], references: [id])
  comments Comment[]
  like Int @default(0)
  dislike Int @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Status {
  drafted
  published
  archived
  banned
}

model Comment {
  id String @id @default(uuid())
  content String
  postId String
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  authorId String
  author User @relation(fields: [authorId], references: [id])
  like Int @default(0)
  dislike Int @default(0)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}